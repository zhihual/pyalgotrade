# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, Gabriel Martín Becedillas Ruiz
# This file is distributed under the same license as the PyAlgoTrade
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyAlgoTrade 0.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-09-13 15:35+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../eventprofiler.rst:2
msgid "Event profiler"
msgstr ""

#: ../../eventprofiler.rst:4
msgid ""
"Inspired in QSTK "
"(http://wiki.quantsoftware.org/index.php?title=QSTK_Tutorial_9), the "
"**eventprofiler** module is a tool to analyze, statistically, how events "
"affect future equity prices. The event profiler scans over historical "
"data for a specified event and then calculates the impact of that event "
"on the equity prices in the past and the future over a certain lookback "
"period."
msgstr ""

#: ../../eventprofiler.rst:9
msgid ""
"**The goal of this tool is to help you quickly validate an idea, before "
"moving forward with the backtesting process.**"
msgstr ""

#: of pyalgotrade.eventprofiler.Predicate:1
#: pyalgotrade.eventprofiler.Profiler:1 pyalgotrade.eventprofiler.Results:1
msgid "基类：:class:`object`"
msgstr ""

#: of pyalgotrade.eventprofiler.Results:1
msgid "Results from the profiler."
msgstr ""

#: of pyalgotrade.eventprofiler.Results.getEventCount:1
msgid ""
"Returns the number of events occurred. Events that are on the boundary "
"are skipped."
msgstr ""

#: of pyalgotrade.eventprofiler.Predicate:1
msgid ""
"Base class for event identification. You should subclass this to "
"implement the event identification logic."
msgstr ""

#: of pyalgotrade.eventprofiler.Predicate.eventOccurred:1
msgid ""
"Override (**mandatory**) to determine if an event took place in the last "
"bar (bards[-1])."
msgstr ""

#: of pyalgotrade.eventprofiler.Predicate.eventOccurred:3
msgid "Instrument identifier."
msgstr ""

#: of pyalgotrade.eventprofiler.Predicate.eventOccurred:5
msgid "The BarDataSeries for the given instrument."
msgstr ""

#: of pyalgotrade.eventprofiler.Profiler:1
msgid ""
"This class is responsible for scanning over historical data and analyzing"
" returns before and after the events."
msgstr ""

#: of pyalgotrade.eventprofiler.Profiler:4
msgid "A :class:`Predicate` subclass responsible for identifying events."
msgstr ""

#: of pyalgotrade.eventprofiler.Profiler:6
msgid "The number of bars before the event to analyze. Must be > 0."
msgstr ""

#: of pyalgotrade.eventprofiler.Profiler:8
msgid "The number of bars after the event to analyze. Must be > 0."
msgstr ""

#: of pyalgotrade.eventprofiler.Profiler.getResults:1
msgid "Returns the results of the analysis."
msgstr ""

#: of pyalgotrade.eventprofiler.Profiler.getResults:3
msgid ":class:`Results`."
msgstr ""

#: of pyalgotrade.eventprofiler.Profiler.run:1
msgid "Runs the analysis using the bars supplied by the feed."
msgstr ""

#: of pyalgotrade.eventprofiler.Profiler.run:3
msgid "The bar feed to use to run the analysis."
msgstr ""

#: of pyalgotrade.eventprofiler.Profiler.run:5
msgid "True if adjusted close values should be used to calculate returns."
msgstr ""

#: of pyalgotrade.eventprofiler.plot:1
msgid "Plots the result of the analysis."
msgstr ""

#: of pyalgotrade.eventprofiler.plot:3
msgid "The result of the analysis"
msgstr ""

#: ../../eventprofiler.rst:17
msgid "Example"
msgstr ""

#: ../../eventprofiler.rst:19
msgid ""
"The following example is inspired on the 'Buy-on-Gap Model' from Ernie "
"Chan's book: 'Algorithmic Trading: Winning Strategies and Their "
"Rationale':"
msgstr ""

#: ../../eventprofiler.rst:22
msgid ""
"The idea is to select a stock near the market open whose returns from "
"their previous day's lows to today's open are lower that one standard "
"deviation. The standard deviation is computed using the daily close-to-"
"close returns of the last 90 days. These are the stocks that \"gapped "
"down\"."
msgstr ""

#: ../../eventprofiler.rst:25
msgid ""
"This is narrowed down by requiring the open price to be higher than the "
"20-day moving average of the closing price."
msgstr ""

#: ../../eventprofiler.rst:30
msgid "The code is doing 4 things:"
msgstr ""

#: ../../eventprofiler.rst:32
msgid ""
"Declaring a :class:`Predicate` that implements the 'Buy-on-Gap Model' "
"event identification."
msgstr ""

#: ../../eventprofiler.rst:33
msgid "Loading bars for some stocks."
msgstr ""

#: ../../eventprofiler.rst:34
msgid "Running the analysis."
msgstr ""

#: ../../eventprofiler.rst:35
msgid "Plotting the results."
msgstr ""

#: ../../eventprofiler.rst:37
msgid "This is what the output should look like:"
msgstr ""

#: ../../eventprofiler.rst:43
msgid "Note that **Cummulative returns are normalized to the time of the event**."
msgstr ""

