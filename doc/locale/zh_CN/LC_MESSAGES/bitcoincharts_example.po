# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, Gabriel Mart√≠n Becedillas Ruiz
# This file is distributed under the same license as the PyAlgoTrade
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyAlgoTrade 0.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-09-13 15:35+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../bitcoincharts_example.rst:2
msgid "Bitcoin Charts example"
msgstr ""

#: ../../bitcoincharts_example.rst:4
msgid ""
"Although it is absolutely possible to backtest a strategy with tick data "
"as supplied by http://www.bitcoincharts.com/about/markets-api/ using "
":class:`pyalgotrade.bitcoincharts.barfeed.CSVTradeFeed`, you may want to "
"to backtest using summarized bars at a different frequency to make "
"backtesting faster."
msgstr ""

#: ../../bitcoincharts_example.rst:8
msgid ""
"As of 12-Aug-2014, http://api.bitcoincharts.com/v1/csv/bitstampUSD.csv.gz"
" has 4588830 events so we'll transform a portion of it into 30 minute "
"bars for backtesting purposes with the following script:"
msgstr ""

#: ../../bitcoincharts_example.rst:13
msgid ""
"It will take some time to execute, so be patient. The resampled file "
"should look like this: ::"
msgstr ""

#: ../../bitcoincharts_example.rst:26
msgid ""
"We can now take advantage of "
":class:`pyalgotrade.barfeed.csvfeed.GenericBarFeed` to load the resampled"
" file and backtest a Bitcoin strategy. We'll be using a VWAP momentum "
"strategy for illustration purposes:"
msgstr ""

#: ../../bitcoincharts_example.rst:31
msgid "This is what the plot looks like:"
msgstr ""

