# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, Gabriel Mart√≠n Becedillas Ruiz
# This file is distributed under the same license as the PyAlgoTrade
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyAlgoTrade 0.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-09-13 15:35+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../talib.rst:2
msgid "TA-Lib integration"
msgstr ""

#: ../../talib.rst:4
msgid ""
"The **pyalgotrade.talibext.indicator** module provides integration with "
"Python wrapper for TA-Lib (http://mrjbq7.github.com/ta-lib/) to enable "
"calling TA-Lib functions directly with "
":class:`pyalgotrade.dataseries.DataSeries` or "
":class:`pyalgotrade.dataseries.bards.BarDataSeries` instances instead of "
"numpy arrays."
msgstr ""

#: ../../talib.rst:8
msgid ""
"If you're familiar with the **talib** module, then using the "
"**pyalgotrade.talibext.indicator** module should be straightforward. When"
" using **talib** standalone you do something like this: ::"
msgstr ""

#: ../../talib.rst:17
msgid ""
"To use the **pyalgotrade.talibext.indicator** module in your strategies "
"you should do something like this: ::"
msgstr ""

#: ../../talib.rst:25
msgid ""
"Every function in the **pyalgotrade.talibext.indicator** module receives "
"one or more dataseries (most receive just one) and the number of values "
"to use from the dataseries. In the example above, we're calculating "
"Bollinger Bands over the last 100 closing prices."
msgstr ""

#: ../../talib.rst:28
msgid ""
"If the parameter name is **ds**, then you should pass a regular "
":class:`pyalgotrade.dataseries.DataSeries` instance, like the one shown "
"in the example above."
msgstr ""

#: ../../talib.rst:31
msgid ""
"If the parameter name is **barDs**, then you should pass a "
":class:`pyalgotrade.dataseries.bards.BarDataSeries` instance, like in the"
" next example: ::"
msgstr ""

#: ../../talib.rst:40
msgid ""
"The following TA-Lib functions are available through the "
"**pyalgotrade.talibext.indicator** module:"
msgstr ""

